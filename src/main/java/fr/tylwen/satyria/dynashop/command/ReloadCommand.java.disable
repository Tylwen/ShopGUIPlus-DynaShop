/*
 * ShopGUI+ DynaShop - Dynamic Economy Addon for Minecraft
 * Copyright (C) 2025 Tylwen
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
// package fr.tylwen.satyria.dynashop.command;

// public class ReloadCommand extends CommandBase {
//     public ReloadCommand() {
//         super("reload", "Reload the plugin configuration and shops.", "/dynashop reload", "dynashop.reload");
//     }

//     @Override
//     public void execute(CommandSender sender, String[] args) {
//         if (!sender.hasPermission(getPermission())) {
//             sender.sendMessage(Lang.getConfig().getString("no_permission"));
//             return;
//         }

//         // Reload the configuration files
//         Settings.getInstance().setConfig(YamlConfiguration.loadConfiguration(new File(DynaShopPlugin.getInstance().getDataFolder(), "config.yml")));
//         Lang.setConfig(YamlConfiguration.loadConfiguration(new File(DynaShopPlugin.getInstance().getDataFolder(), "lang.yml")));

//         // Reload the shop files
//         ShopFile.loadShopFiles(new File(DynaShopPlugin.getInstance().getDataFolder(), "shops"));

//         sender.sendMessage(Lang.getConfig().getString("config_reload_success"));
//     }
    
// }

package fr.tylwen.satyria.dynashop.command;

import fr.tylwen.satyria.dynashop.DynaShopPlugin;
// import fr.tylwen.satyria.dynashop.config.DataConfig;
// import net.brcdev.shopgui.ShopGuiPlusApi;

// import java.io.File;

// import java.io.File;

// import java.util.Arrays;
// import java.util.Collections;
// import java.util.List;

import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
// import org.bukkit.configuration.file.FileConfiguration;
// import org.bukkit.configuration.file.YamlConfiguration;
// import org.bukkit.configuration.file.YamlConfiguration;

public class ReloadCommand implements CommandExecutor {
    private final DynaShopPlugin plugin;

    public ReloadCommand(DynaShopPlugin plugin) {
        this.plugin = plugin;
    }

    // @Override
    // public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
    //     if (!sender.hasPermission("dynashop.reload")) {
    //         sender.sendMessage("§cVous n'avez pas la permission d'exécuter cette commande.");
    //         return true;
    //     }

    //     sender.sendMessage("§eRechargement du plugin DynaShop...");
    //     plugin.onDisable(); // Désactiver proprement le plugin
    //     plugin.onEnable();  // Réactiver le plugin
    //     plugin.reloadConfig(); // Recharge config.yml
    //     sender.sendMessage("§aLe plugin DynaShop a été rechargé avec succès !");
    //     return true;
        
    //     // sender.sendMessage("§eRechargement du plugin DynaShop...");

    //     // // Recharger les fichiers de configuration
    //     // try {
    //     //     plugin.reloadConfig(); // Recharge config.yml
    //     //     File langFile = new File(plugin.getDataFolder(), "lang.yml");
    //     //     if (langFile.exists()) {
    //     //         FileConfiguration langConfig = YamlConfiguration.loadConfiguration(langFile);
    //     //         plugin.setLangConfig(langConfig); // Méthode à ajouter dans DynaShopPlugin pour gérer lang.yml
    //     //     }

    //     //     // Recharger les shops
    //         // plugin.getShopConfigManager().reloadShops(); // Assurez-vous que cette méthode existe dans ShopConfigManager

    //     //     sender.sendMessage("§aLes fichiers de configuration et de langue ont été rechargés avec succès !");
    //     // } catch (Exception e) {
    //     //     sender.sendMessage("§cUne erreur est survenue lors du rechargement des fichiers de configuration.");
    //     //     e.printStackTrace();
    //     // }

    //     // sender.sendMessage("§aLe plugin DynaShop a été rechargé avec succès !");
    //     // return true;
    // }
    @Override
    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
        if (!sender.hasPermission("dynashop.reload")) {
            sender.sendMessage("§cVous n'avez pas la permission d'exécuter cette commande.");
            return true;
        }

        // sender.sendMessage("§eRechargement du plugin DynaShop...");

        try {

            // Recharger les fichiers de configuration
            plugin.reloadConfig(); // Recharge config.yml
            
            // Ré-instancier DataConfig avec la nouvelle config
            // plugin.setDataConfig(new DataConfig(plugin.getConfig()));
            plugin.load();

            // // Si tu utilises DataConfig ailleurs (ex: dans ItemDataManager), il faut aussi la réinjecter
            // plugin.getItemDataManager().setDataConfig(plugin.getDataConfig());

            // File langFile = new File(plugin.getDataFolder(), "lang.yml");
            // if (langFile.exists()) {
            //     YamlConfiguration langConfig = YamlConfiguration.loadConfiguration(langFile);
            //     plugin.setLangConfig(langConfig); // Ajoute un setter si besoin
            // }

            // // Recharger les shops
            // plugin.getShopConfigManager().reloadShops(); // Assure-toi que cette méthode existe
            // ShopGuiPlusApi.getPlugin().getShopManager().load(); // Recharger les shops de ShopGuiPlus
            plugin.getShopConfigManager().reloadCache(); // Recharger les shops de DynaShop

            // // Réinitialiser les caches si besoin
            // plugin.getPriceCache().clear();
            // plugin.getRecipeCache().clear();
            // plugin.getCalculatedPriceCache().clear();
            // plugin.getStockCache().clear();
            // plugin.getDisplayPriceCache().clear();

            sender.sendMessage("§aLe plugin DynaShop a été rechargé avec succès !");
        } catch (Exception e) {
            sender.sendMessage("§cUne erreur est survenue lors du rechargement des fichiers de configuration.");
            e.printStackTrace();
        }
        return true;
    }
}