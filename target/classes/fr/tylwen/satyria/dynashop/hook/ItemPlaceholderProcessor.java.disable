// Ajouter dans pom.xml:
// <dependency>
//   <groupId>com.comphenix.protocol</groupId>
//   <artifactId>ProtocolLib</artifactId>
//   <version>4.7.0</version>
//   <scope>provided</scope>
// </dependency>

package fr.tylwen.satyria.dynashop.hook;

import java.util.ArrayList;
import java.util.List;

import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;

import com.comphenix.protocol.PacketType;
import com.comphenix.protocol.ProtocolLibrary;
import com.comphenix.protocol.ProtocolManager;
import com.comphenix.protocol.events.PacketAdapter;
import com.comphenix.protocol.events.PacketContainer;
import com.comphenix.protocol.events.PacketEvent;
import com.comphenix.protocol.wrappers.nbt.NbtCompound;
import com.comphenix.protocol.wrappers.nbt.NbtFactory;

import fr.tylwen.satyria.dynashop.DynaShopPlugin;
import me.clip.placeholderapi.PlaceholderAPI;

public class ItemPlaceholderProcessor {
    
    private final DynaShopPlugin plugin;
    
    public ItemPlaceholderProcessor(DynaShopPlugin plugin) {
        this.plugin = plugin;
        registerPacketListener();
    }
    
    private void registerPacketListener() {
        ProtocolManager protocolManager = ProtocolLibrary.getProtocolManager();
        
        protocolManager.addPacketListener(new PacketAdapter(plugin, 
                PacketType.Play.Server.WINDOW_ITEMS, 
                PacketType.Play.Server.SET_SLOT) {
            @Override
            public void onPacketSending(PacketEvent event) {
                // Traiter uniquement les inventaires de shop
                Player player = event.getPlayer();
                if (player.getOpenInventory() == null || 
                    !player.getOpenInventory().getTitle().contains("Shop") && 
                    !player.getOpenInventory().getTitle().contains("Magasin")) {
                    return;
                }
                
                try {
                    PacketContainer packet = event.getPacket();
                    List<ItemStack> items = new ArrayList<>();
                    
                    if (event.getPacketType() == PacketType.Play.Server.WINDOW_ITEMS) {
                        items = packet.getItemListModifier().read(0);
                    } else if (event.getPacketType() == PacketType.Play.Server.SET_SLOT) {
                        ItemStack item = packet.getItemModifier().read(0);
                        if (item != null) {
                            items.add(item);
                        }
                    }
                    
                    for (ItemStack item : items) {
                        if (item != null && item.hasItemMeta() && item.getItemMeta().hasLore()) {
                            processItemPlaceholders(player, item);
                        }
                    }
                    
                    if (event.getPacketType() == PacketType.Play.Server.WINDOW_ITEMS) {
                        packet.getItemListModifier().write(0, items);
                    } else if (event.getPacketType() == PacketType.Play.Server.SET_SLOT) {
                        packet.getItemModifier().write(0, items.get(0));
                    }
                } catch (Exception e) {
                    plugin.getLogger().severe("Erreur lors du traitement des placeholders: " + e.getMessage());
                    e.printStackTrace();
                }
            }
        });
    }
    
    private void processItemPlaceholders(Player player, ItemStack item) {
        if (item == null) return;
        
        try {
            // Obtenir les informations du shop actuellement ouvert
            String shopId = null;
            String itemId = null;
            if (plugin.getDynaShopListener() != null) {
                shopId = plugin.getDynaShopListener().getCurrentShopId(player);
                itemId = plugin.getDynaShopListener().getCurrentItemId(player);
            }
            
            // [...continuation du code pour remplacer les placeholders...]
        } catch (Exception e) {
            plugin.getLogger().warning("Erreur lors du traitement des placeholders: " + e.getMessage());
        }
    }
}